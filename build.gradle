
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://tehnut.info/maven"
    }
    maven { // JEI
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { // CompatLayer
        url "http://maven.k-4u.nl"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

version = "1.11-1.3.4"
def ENV = System.getenv()
if (ENV.DRONE_BUILD_NUMBER) {
    version += ".n" + ENV.DRONE_BUILD_NUMBER
}
group= "mcjty.theoneprobe" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "theoneprobe"

if (System.getenv('BUILD_NUMBER') != null) {
    version += "-${System.getenv('BUILD_NUMBER')}"
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.11.2-13.20.0.2201"
    runDir = "run"
    mappings = "snapshot_20161227"
    useDepAts = true
}

dependencies {
    deobfCompile "mcp.mobius.waila:Hwyla:1.8.3-B15_1.11"
    deobfCompile "mezz.jei:jei_1.11.2:4.2.0.210"
    deobfCompile "com.github.mcjty:compatlayer:1.11.2-0.1.7"
    deobfCompile "com.github.mcjty:intwheel:1.1x-1.1.0"
}

jar {
    manifest {
        attributes 'FMLAT': 'top_at.cfg'
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task apiJar(type: Jar) {
    classifier = "api"
    from(sourceSets.main.output) {
        include "mcjty/theoneprobe/api/**"
    }
}

artifacts {
    archives apiJar
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact apiJar
            artifact sourceJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        } else {
            mavenLocal()
        }
    }
}
